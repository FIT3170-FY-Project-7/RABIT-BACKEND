openapi: 3.0.0
info:
  title: RABIT API
  description: REST API for RABIT.
  version: 1.0.0
servers:
  - url: https://rabit2022.cloud.edu.au/api/v1
    description: Main instance


tags:
  - name: users
    description: Operations on user accounts.
  - name: plot-collections
  - name: plots


paths:
  /users:
    get:
      summary: Returns a list of users.
      tags:
        - users
      responses:
        '200':
          description: A JSON array of user objects
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/User'
    post:
      summary: Add a new user.
      tags:
        - users
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UserPost'
      responses:
        '201':
          description: User successfully created.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/User'
        '409':
          description: The account with the specified username already exists.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
  /users/{userId}:
    get:
      summary: Returns a user by ID.
      tags:
        - users
      parameters:
        - name: userId
          in: path
          required: true
          description: The ID of the user to return.
          schema:
            type: string
            format: uuid
            minimum: 1
      responses:
        '200':
          description: A user object
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/User'
        '404':
          description: The specified user does not exist.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
  /plot-collections:
    get:
      summary: Returns a list of plot collections
      tags:
        - plot-collections
      responses:
        '200':
          description: An array of plot collection objects
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/PlotCollection'
    post:
      summary: Add a new plot collection.
      tags:
        - plot-collections
      requestBody:
        required: true
        content:
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/PlotCollectionPost'
      responses:
        '201':
          description: Collection successfully created.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PlotCollection'
        '400':
          description: Upload error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'


components:
  schemas:
    User:
      type: object
      properties:
        id:
          type: string
          format: uuid
        username:
          type: string
        displayName:
          type: string
        # FIXME: some attributes need to be excluded by default to avoid recursion
        # plotCollections:
        #   type: array
        #   items:
        #     $ref: '#/components/schemas/PlotCollection'
        # cornerPlots:
        #   type: array
        #   items:
        #     $ref: '#/components/schemas/CornerPlot'
      required:
        - id
        - username
        - displayName
    UserPost:
      type: object
      properties:
        username:
          type: string
        displayName:
          type: string
        email:
          type: string
          format: email
        password:
          type: string
      required:
        - username
        - displayName
        - email
        - password
    PlotCollection:
      type: object
      properties:
        id:
          type: string
          format: uuid
        name:
          type: string
        description:
          type: string
        author:
          $ref: '#/components/schemas/User'
        baseParameters:
          type: array
          items:
            $ref: '#/components/schemas/BaseParameter'
      required:
        - id
        - name
        - description
        - author
    PlotCollectionPost:
      type: object
      properties:
        name:
          type: string
        description:
          type: string
        plotData:
          type: string
          format: binary
    BaseParameter:
      type: object
      properties:
        id:
          type: string
          format: uuid
        name:
          type: string
        latexLabel:
          type: string
          nullable: true
        unit:
          type: string
        values:
          type: array
          items:
            $ref: '#/components/schemas/Complex'
      required:
        - id
        - name
        - latexLabel
        - unit
    CornerPlot:
      type: object
      properties:
        id:
          type: string
          format: uuid
        name:
          type: string
        description:
          type: string
        author:
          $ref: '#/components/schemas/User'
        locked:
          type: boolean
        parameters:
          type: array
          items:
            $ref: '#/components/schemas/ParameterConfig'
        sourceCollection:
          $ref: '#/components/schemas/PlotCollection'
      required:
        - id
        - name
        - description
        - author
        - locked
        - parameters
        - sourceCollection
    ParameterConfig:
      type: object
      properties:
        id:
          type: string
          format: uuid
        baseParameter:
          $ref: '#/components/schemas/BaseParameter'
        domainMin:
          $ref: '#/components/schemas/Complex'
        domainMax:
          $ref: '#/components/schemas/Complex'
        hidden:
          type: boolean
      required:
        - id
        - domainMin
        - domainMax
        - hidden
    # Utility types
    Complex:
      description: Complex number
      type: object
      properties:
        real:
          type: number
          format: double
        imag:
          type: number
          format: double
      required:
        - real
        - imag
    Error:
      type: object
      properties:
        error:
          type: string
          description: Error message
      required:
        - error
